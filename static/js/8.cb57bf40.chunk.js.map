{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/ArrowLeftOutlined.js","../node_modules/@ant-design/icons/es/icons/ArrowLeftOutlined.js","views/SkillView/SkillView.tsx"],"names":["ArrowLeftOutlined","props","ref","React","AntdIcon","Object","assign","icon","ArrowLeftOutlinedSvg","displayName","languageSkillChartAxisCommon","min","interval","splitLine","lineStyle","type","scale","languageSkillChartLabelCommon","show","formatter","param","name","position","rich","label","fontSize","color","fontWeight","borderColor","padding","borderRadius","mark","SkillView","prop","iconDefaultSize","currentYear","Date","getFullYear","useState","require","skills","skillChart","title","text","legend","right","top","xAxis","max","yAxis","tooltip","console","log","year","data","value","level","series","map","s","toLowerCase","frontend","backend","framework","database","other","d","symbol","symbolSize","iconSize","languageSkillChartOption","className","size","onClick","history","push","span","option","style","height"],"mappings":"q4DAEeA,EADS,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gOAAoO,KAAQ,aAAc,MAAS,Y,SCK9ZA,EAAoB,SAA2BC,EAAOC,GACxD,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAIL,EAAO,CAC5DC,IAAKA,EACLK,KAAMC,MAIVR,EAAkBS,YAAc,oBACjBN,iBAAiBH,I,6ICc1BU,EAA+B,CACnCC,IAAK,EACLC,SAAU,EACVC,UAAW,CACTC,UAAW,CACTC,KAAM,WAGVC,OAAO,GAGHC,EAAgC,CACpCC,MAAM,EACNC,UAAW,SAACC,GAAD,oCAAkCA,EAAMC,KAAxC,MACXC,SAAU,SACVC,KAAM,CACJC,MAAO,CACLC,SAAU,GACVC,MAAO,UACPC,WAAY,OACZC,YAAa,UACbC,QAAS,CAAC,EAAG,GACbC,aAAc,GAEhBC,KAAM,CACJN,SAAU,MA4EDO,UAvEoB,SAAAC,GACjC,IACMC,EAAkB,CAAC,GAAI,IACvBC,GAAc,IAAIC,MAAOC,cAHU,EAIpBC,mBAASC,EAAQ,KAAgCC,QAA/DC,EAJkC,sBAMNH,mBAAS,CAE1CI,MAAO,CAAEC,KAAM,wCACfC,OAAQ,CAAEC,MAAO,IAAKC,IAAK,IAC3BC,MAAM,aAAG1B,KAAM,2BAAQ2B,IAAKb,EATZ,MASwCzB,GACxDuC,MAAM,aAAG5B,KAAM,qBAAO2B,IAAK,IAAOtC,GAClCgB,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,WACpDwB,QAAS,CACP/B,UAAW,SAACC,GACV+B,QAAQC,IAAIhC,GACZ,IAAMiC,EAAOjC,EAAMkC,KAAKC,MAAM,GACxBC,EAAQpC,EAAMkC,KAAKC,MAAM,GAC/B,MAAM,GAAN,OAAUnC,EAAMkC,KAAKjC,KAArB,0CAAuCgC,EAAvC,0CAAyDG,EAAzD,OAGJC,OAhBa,CAAC,WAAY,UAAW,YAAa,WAAY,SAgB/CC,KAAI,SAAAC,GACjB,IAAIL,EAAyB,GAC7B,OAAQK,EAAEC,eACR,IAAK,WACHN,EAAOb,EAAWoB,SAClB,MACF,IAAK,UACHP,EAAOb,EAAWqB,QAClB,MACF,IAAK,YACHR,EAAOb,EAAWsB,UAClB,MACF,IAAK,WACHT,EAAOb,EAAWuB,SAClB,MACF,IAAK,QACHV,EAAOb,EAAWwB,MAGtB,MAAO,CACL5C,KAAMsC,EACN5C,KAAM,UACNuC,KAAMA,EAAKI,KAAI,SAAAQ,GACb,MAAO,CACL7C,KAAM6C,EAAE7C,KACRkC,MAAOW,EAAEX,MACTY,OAAO,yCAAD,OAA2CD,EAAE3D,MACnD6D,WAAYF,EAAEG,UAAYnC,EAC1BV,MAAM,eAAMP,aA3CfqD,EANkC,oBAwDzC,OACE,6BAASC,UAAU,cACjB,kBAAC,IAAD,CAAQA,UAAU,gBAAgBxD,KAAK,OAAOR,KAAM,kBAAC,IAAD,MAAuBiE,KAAK,QAAQC,QAAS,kBAAMxC,EAAKyC,QAAQC,KAAK,OAAzH,gBAGA,wBAAIJ,UAAU,mBAAd,sBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKK,KAAM,IACT,kBAAC,IAAD,CAAcC,OAAQP,EAA0BQ,MAAO,CAAEC,OAAQ","file":"static/js/8.cb57bf40.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar ArrowLeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"arrow-left\", \"theme\": \"outlined\" };\nexport default ArrowLeftOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ArrowLeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowLeftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ArrowLeftOutlined = function ArrowLeftOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ArrowLeftOutlinedSvg\n  }));\n};\n\nArrowLeftOutlined.displayName = 'ArrowLeftOutlined';\nexport default React.forwardRef(ArrowLeftOutlined);","import { Button, Col, Row } from 'antd';\nimport React, { useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport './SkillView.scss';\nimport { EChartOption } from 'echarts';\nimport ReactEcharts from 'echarts-for-react';\n\ntype Props = {} & RouteComponentProps;\n\nconst frontendColor = '#fa541c';\nconst backendColor = '#722ed1';\n\ninterface SkillChartData {\n  name: string;\n  value: [number, number];\n  icon: string;\n  iconSize?: number | [number, number];\n}\n\ntype SkillChart = {\n  frontend: SkillChartData[];\n  backend: SkillChartData[];\n  framework: SkillChartData[];\n  database: SkillChartData[];\n  other: SkillChartData[];\n};\n\nconst languageSkillChartAxisCommon = {\n  min: 0,\n  interval: 1,\n  splitLine: {\n    lineStyle: {\n      type: 'dashed',\n    },\n  },\n  scale: true,\n};\n\nconst languageSkillChartLabelCommon = {\n  show: true,\n  formatter: (param: any) => `{mark|●}{label|${param.name}}`,\n  position: 'bottom',\n  rich: {\n    label: {\n      fontSize: 12,\n      color: '#141414',\n      fontWeight: 'bold',\n      borderColor: '#8c8c8c',\n      padding: [2, 4],\n      borderRadius: 4,\n    },\n    mark: {\n      fontSize: 18,\n    },\n  },\n};\n\nconst SkillView: React.FC<Props> = prop => {\n  const startYear = 2010;\n  const iconDefaultSize = [20, 20];\n  const currentYear = new Date().getFullYear();\n  const [skillChart] = useState(require('../../assets/data/skill.json').skills as SkillChart);\n  const series = ['Frontend', 'Backend', 'Framework', 'Database', 'Other'];\n  const [languageSkillChartOption] = useState({\n    // backgroundColor: '#f7f8fa',\n    title: { text: 'スキルマップ' },\n    legend: { right: 100, top: 20 },\n    xAxis: { name: '経験年数', max: currentYear - startYear, ...languageSkillChartAxisCommon },\n    yAxis: { name: '熟練度', max: 10, ...languageSkillChartAxisCommon },\n    color: ['#f5222d', '#1890ff', '#fa541c', '#52c41a', '#8c8c8c'],\n    tooltip: {\n      formatter: (param: any) => {\n        console.log(param);\n        const year = param.data.value[0];\n        const level = param.data.value[1];\n        return `${param.data.name}<br/>経験年数: ${year}年<br/>熟練度: ${level}P`;\n      },\n    },\n    series: series.map(s => {\n      let data: SkillChartData[] = [];\n      switch (s.toLowerCase()) {\n        case 'frontend':\n          data = skillChart.frontend;\n          break;\n        case 'backend':\n          data = skillChart.backend;\n          break;\n        case 'framework':\n          data = skillChart.framework;\n          break;\n        case 'database':\n          data = skillChart.database;\n          break;\n        case 'other':\n          data = skillChart.other;\n          break;\n      }\n      return {\n        name: s,\n        type: 'scatter',\n        data: data.map(d => {\n          return {\n            name: d.name,\n            value: d.value,\n            symbol: `image://./images/programming-language/${d.icon}`,\n            symbolSize: d.iconSize || iconDefaultSize,\n            label: { ...languageSkillChartLabelCommon },\n          };\n        }),\n      };\n    }),\n  } as EChartOption);\n\n  return (\n    <section className=\"skill-view\">\n      <Button className=\"app__btn-back\" type=\"link\" icon={<ArrowLeftOutlined />} size=\"large\" onClick={() => prop.history.push('/')}>\n        戻る\n      </Button>\n      <h1 className=\"app__page-title\">スキル</h1>\n      <Row>\n        <Col span={24}>\n          <ReactEcharts option={languageSkillChartOption} style={{ height: '750px' }} />\n        </Col>\n      </Row>\n    </section>\n  );\n};\n\nexport default SkillView;\n"],"sourceRoot":""}
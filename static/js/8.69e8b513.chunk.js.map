{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/ArrowLeftOutlined.js","../node_modules/@ant-design/icons/es/icons/ArrowLeftOutlined.js","components/Skill/SkillLanguageMap.tsx","components/Skill/SkillGauge.tsx","components/Skill/SkillRanking.tsx","views/SkillView/SkillView.tsx"],"names":["ArrowLeftOutlined","props","ref","React","AntdIcon","Object","assign","icon","ArrowLeftOutlinedSvg","displayName","languageSkillChartAxisCommon","min","interval","nameTextStyle","fontSize","axisLine","show","onZero","lineStyle","width","axisTick","splitLine","type","axisLabel","scale","languageSkillChartLabelCommon","formatter","param","name","position","rich","label","color","fontWeight","mark","SkillLanguageMap","prop","iconDefaultSize","currentYear","Date","getFullYear","useState","title","text","legend","right","top","grid","containLabel","bottom","xAxis","max","yAxis","tooltip","axisPointer","console","log","year","data","value","level","series","map","s","toLowerCase","dataSource","frontend","backend","framework","database","other","d","symbol","symbolSize","iconSize","languageSkillChartOption","option","style","height","SkillGauge","colors","radius","center","graphic","LinearGradient","offset","length","detail","offsetCenter","percent","assessChartOption","SkillRanking","radar","indicator","items","splitArea","splitNumber","textStyle","itemStyle","areaStyle","opacity","score","skillRankingChartOption","SkillView","skillData","require","skills","skillLanguageMapData","ranking","sSkillRinkingData","className","size","onClick","history","push","span"],"mappings":"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","file":"static/js/8.69e8b513.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar ArrowLeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"arrow-left\", \"theme\": \"outlined\" };\nexport default ArrowLeftOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ArrowLeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowLeftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ArrowLeftOutlined = function ArrowLeftOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: ArrowLeftOutlinedSvg\n  }));\n};\n\nArrowLeftOutlined.displayName = 'ArrowLeftOutlined';\nexport default React.forwardRef(ArrowLeftOutlined);","import React, { useState } from 'react';\nimport { EChartOption } from 'echarts';\nimport ReactEcharts from 'echarts-for-react';\nimport { SkillLanguargeMap, SkillLanguargeMapItem } from '../../models/skill';\n\ntype Props = {\n  dataSource: SkillLanguargeMap;\n};\n\nconst languageSkillChartAxisCommon = {\n  min: 0,\n  interval: 1,\n  nameTextStyle: {\n    fontSize: 14,\n  },\n  axisLine: { show: true, onZero: false, lineStyle: { width: 2 } },\n  axisTick: { lineStyle: { width: 2 } },\n  splitLine: { lineStyle: { type: 'dashed' } },\n  axisLabel: { fontSize: 14 },\n  scale: true,\n};\n\nconst languageSkillChartLabelCommon = {\n  show: true,\n  formatter: (param: any) => `{mark|●}{label|${param.name}}`,\n  position: 'bottom',\n  rich: {\n    label: { fontSize: 12, color: '#141414', fontWeight: 'bold' },\n    mark: { fontSize: 18 },\n  },\n};\n\nconst SkillLanguageMap: React.FC<Props> = prop => {\n  const startYear = 2010;\n  const iconDefaultSize = [20, 20];\n  const currentYear = new Date().getFullYear();\n\n  const series = ['Frontend', 'Backend', 'Framework', 'Database', 'Other'];\n  const [languageSkillChartOption] = useState({\n    // backgroundColor: '#f7f8fa',\n    title: { text: '言語マップ' },\n    legend: { right: 100, top: 35 },\n    grid: { containLabel: false, top: 70, bottom: 20 },\n    xAxis: { name: '経験年数', max: currentYear - startYear, ...languageSkillChartAxisCommon },\n    yAxis: { name: '熟練度', max: 10, ...languageSkillChartAxisCommon },\n    color: ['#f5222d', '#1890ff', '#fadb14', '#52c41a', '#8c8c8c'],\n    tooltip: {\n      axisPointer: {\n        show: true,\n        type: 'cross',\n        lineStyle: { width: 1 },\n      },\n      formatter: (param: any) => {\n        console.log(param);\n        const year = param.data.value[0];\n        const level = param.data.value[1];\n        return `${param.data.name}<br/>経験年数: ${year}年<br/>熟練度: ${level}P`;\n      },\n    },\n    series: series.map(s => {\n      let data: SkillLanguargeMapItem[] = [];\n      switch (s.toLowerCase()) {\n        case 'frontend':\n          data = prop.dataSource.frontend;\n          break;\n        case 'backend':\n          data = prop.dataSource.backend;\n          break;\n        case 'framework':\n          data = prop.dataSource.framework;\n          break;\n        case 'database':\n          data = prop.dataSource.database;\n          break;\n        case 'other':\n          data = prop.dataSource.other;\n          break;\n      }\n      return {\n        name: s,\n        type: 'scatter',\n        data: data.map(d => {\n          return {\n            name: d.name,\n            value: d.value,\n            symbol: `image://./images/programming-language/${d.icon}`,\n            symbolSize: d.iconSize || iconDefaultSize,\n            label: { ...languageSkillChartLabelCommon },\n          };\n        }),\n      };\n    }),\n  } as EChartOption);\n\n  return <ReactEcharts option={languageSkillChartOption} style={{ height: '720px' }} />;\n};\n\nexport default SkillLanguageMap;\n","import { EChartOption, graphic } from 'echarts';\nimport ReactEcharts from 'echarts-for-react';\nimport React, { useState } from 'react';\n\ntype Props = {\n  percent: number;\n  name: string;\n};\n\nconst SkillGauge: React.FC<Props> = prop => {\n  const fontSize = 13;\n  const fontColor = '#0089fa';\n  const colors = ['#f5222d', '#ffd666', '#52c41a'];\n  // 生産性\n  const [assessChartOption] = useState({\n    grid: { top: 10, bottom: -10 },\n    series: [\n      {\n        type: 'gauge',\n        radius: '100%',\n        min: 0,\n        max: 100,\n        center: ['50%', '50%'],\n        axisLine: {\n          lineStyle: {\n            width: 20,\n            color: [\n              [0.1, colors[0]],\n              [\n                0.5,\n                new graphic.LinearGradient(0, 1, 0, 0, [\n                  { offset: 0, color: colors[0] },\n                  { offset: 0.8, color: colors[1] },\n                ]),\n              ],\n              [0.7, colors[1]],\n              [\n                0.9,\n                new graphic.LinearGradient(0, 1, 0, 0, [\n                  { offset: 0, color: colors[2] },\n                  { offset: 0.6, color: colors[1] },\n                ]),\n              ],\n              [1, colors[2]],\n            ],\n          },\n        },\n        splitLine: {\n          length: 10,\n          lineStyle: {\n            width: 2,\n            color: '#ffffff',\n          },\n        },\n        axisTick: {\n          lineStyle: {\n            width: 1,\n            color: '#ffffff',\n          },\n        },\n        axisLabel: {\n          show: false,\n          color: fontColor,\n          fontSize: fontSize,\n        },\n        detail: {\n          show: true,\n          offsetCenter: ['0', '60%'],\n          color: '#141414',\n\n          fontSize: 48,\n        },\n        data: [\n          {\n            value: prop.percent,\n            name: prop.name,\n          },\n        ],\n        title: { offsetCenter: [0, '90%'], fontSize: 14 },\n      },\n    ],\n  } as EChartOption);\n  return <ReactEcharts option={assessChartOption} style={{ height: '250px' }} />;\n};\n\nexport default SkillGauge;\n","import React, { useState } from 'react';\nimport { EChartOption } from 'echarts';\nimport ReactEcharts from 'echarts-for-react';\nimport { SkillRinkingItem } from '../../models/skill';\n\ntype Props = {\n  items: SkillRinkingItem[];\n};\n\nconst SkillRanking: React.FC<Props> = prop => {\n  const color = '#722ed1';\n  const [skillRankingChartOption] = useState({\n    title: {\n      text: 'スキル総合分析',\n    },\n    tooltip: {},\n    radar: {\n      center: ['50%', '50%'],\n      indicator: prop.items.map(d => {\n        return { name: d.name, max: 100, color: '#141414' };\n      }),\n      splitArea: { show: false },\n      splitNumber: 10,\n      textStyle: {},\n    },\n    series: [\n      {\n        name: 'スキル総合分析',\n        type: 'radar',\n        symbol: 'circle',\n        symbolSize: 10,\n        itemStyle: { color: color },\n        areaStyle: { color: color, opacity: 0.3 },\n        lineStyle: { color: color },\n        data: [\n          {\n            value: prop.items.map(d => d.score),\n          },\n        ],\n      },\n    ],\n  } as EChartOption);\n\n  return <ReactEcharts option={skillRankingChartOption} style={{ height: '500px' }} />;\n};\n\nexport default SkillRanking;\n","import { Button, Col, Divider, Row } from 'antd';\nimport React, { useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport SkillLanguageMap from '../../components/Skill/SkillLanguageMap';\nimport './SkillView.scss';\nimport SkillGauge from '../../components/Skill/SkillGauge';\nimport SkillRanking from '../../components/Skill/SkillRanking';\nimport { SkillLanguargeMap, SkillRinkingItem } from '../../models/skill';\n\ntype Props = {} & RouteComponentProps;\n\nconst SkillView: React.FC<Props> = prop => {\n  const skillData = require('../../assets/data/skill.json');\n  const [skillLanguageMapData] = useState(skillData.skills as SkillLanguargeMap);\n  const [sSkillRinkingData] = useState(skillData.ranking as SkillRinkingItem[]);\n\n  return (\n    <section className=\"skill-view\">\n      <Button className=\"app__btn-back\" type=\"link\" icon={<ArrowLeftOutlined />} size=\"large\" onClick={() => prop.history.push('/')}>\n        戻る\n      </Button>\n      <h1 className=\"app__page-title\">スキル</h1>\n\n      <Row className=\"g-mt-sm\">\n        <Col span={8} className=\"g-text-center\">\n          <SkillGauge percent={95} name=\"生産性\" />\n        </Col>\n        <Col span={8} className=\"g-text-center\">\n          <SkillGauge percent={60} name=\"ドキュメント力\" />\n        </Col>\n        <Col span={8} className=\"g-text-center\">\n          <SkillGauge percent={45} name=\"プロジェクト管理\" />\n        </Col>\n      </Row>\n      <Divider className=\"g-mt-sm bc-primary\" />\n      <Row>\n        <Col span={24}>\n          <SkillRanking items={sSkillRinkingData} />\n        </Col>\n      </Row>\n\n      <Divider className=\"g-mt-none-force bc-primary\" />\n      <Row>\n        <Col span={24}>\n          <SkillLanguageMap dataSource={skillLanguageMapData} />\n        </Col>\n      </Row>\n    </section>\n  );\n};\n\nexport default SkillView;\n"],"sourceRoot":""}
{"version":3,"sources":["components/Skill/SkillLanguageMap.tsx","assets/images/avatar.jpeg","views/ResumePDFView/ResumeEnPDFView.tsx"],"names":["languageSkillChartAxisCommon","min","interval","nameTextStyle","fontSize","axisLine","show","onZero","lineStyle","width","axisTick","splitLine","type","axisLabel","scale","languageSkillChartLabelCommon","formatter","param","name","position","rich","label","color","fontWeight","mark","SkillLanguageMap","prop","console","log","JSON","stringify","dataSource","iconDefaultSize","currentYear","Date","getFullYear","useState","title","text","legend","right","top","grid","containLabel","bottom","xAxis","axis","xLabel","max","yAxis","yLabel","tooltip","year","data","value","level","series","map","s","toLowerCase","frontend","backend","framework","database","d","symbol","icon","symbolSize","iconSize","languageSkillChartOption","option","style","height","module","exports","Title","Typography","Text","ResumeEnPDFView","_","skillData","require","skillPointData","skills","skillLanguageMapData","skillPoints","cardBodyStyle","marginTop","paddingBottom","projects","setProjects","window","innerWidth","useEffect","p","className","span","Ribbon","placement","bodyStyle","lg","xs","sm","md","shape","src","myAvatar","size","Item","dot","itemLayout","renderItem","item","Meta","avatar","lang","description","desc","index","key","id","extra","loading","image","maxWidth","alt","CI","other"],"mappings":"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","file":"static/js/7.f2baeee4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { EChartOption } from 'echarts';\nimport ReactEcharts from 'echarts-for-react';\nimport { SkillLanguargeMap, SkillLanguargeMapItem } from '../../models/skill';\n\ntype Props = {\n  title?: string;\n  dataSource: SkillLanguargeMap;\n  axis?: { xLabel: string; yLabel: string };\n};\n\nconst languageSkillChartAxisCommon = {\n  min: 0,\n  interval: 1,\n  nameTextStyle: {\n    fontSize: 14,\n  },\n  axisLine: { show: true, onZero: false, lineStyle: { width: 2 } },\n  axisTick: { lineStyle: { width: 2 } },\n  splitLine: { lineStyle: { type: 'dashed' } },\n  axisLabel: { fontSize: 14 },\n  scale: true,\n};\n\nconst languageSkillChartLabelCommon = {\n  show: true,\n  formatter: (param: any) => `{mark|●}{label|${param.name}}`,\n  position: 'bottom',\n  rich: {\n    label: { fontSize: 12, color: '#141414', fontWeight: 'bold' },\n    mark: { fontSize: 18 },\n  },\n};\n\nconst SkillLanguageMap: React.FC<Props> = prop => {\n  console.log(JSON.stringify(prop.dataSource));\n  const startYear = 2010;\n  const iconDefaultSize = [20, 20];\n  const currentYear = new Date().getFullYear();\n\n  const series = ['Frontend', 'Backend', 'Framework', 'Database'];\n  const [languageSkillChartOption] = useState({\n    // backgroundColor: '#f7f8fa',\n    title: { text: prop.title || '言語マップ' },\n    legend: { right: 100, top: 35 },\n    grid: { containLabel: false, top: 70, bottom: 20 },\n    xAxis: { name: prop.axis?.xLabel || '経験年数', max: currentYear - startYear, ...languageSkillChartAxisCommon },\n    yAxis: { name: prop.axis?.yLabel || '熟練度', max: 10, ...languageSkillChartAxisCommon },\n    color: ['#f5222d', '#1890ff', '#fadb14', '#52c41a', '#8c8c8c'],\n    tooltip: {\n      // axisPointer: {\n      //   show: true,\n      //   type: 'cross',\n      //   lineStyle: { width: 1 },\n      // },\n      formatter: (param: any) => {\n        console.log(param);\n        const year = param.data.value[0];\n        const level = param.data.value[1];\n        return `${param.data.name}<br/>${prop.axis?.xLabel || '経験年数'}: ${year}Y<br/>${prop.axis?.yLabel || '熟練度'}: ${level}P`;\n      },\n    },\n    series: series.map(s => {\n      let data: SkillLanguargeMapItem[] = [];\n      switch (s.toLowerCase()) {\n        case 'frontend':\n          data = prop.dataSource.frontend;\n          break;\n        case 'backend':\n          data = prop.dataSource.backend;\n          break;\n        case 'framework':\n          data = prop.dataSource.framework;\n          break;\n        case 'database':\n          data = prop.dataSource.database;\n          break;\n        // case 'other':\n        //   data = prop.dataSource.other;\n        //   break;\n      }\n      return {\n        name: s,\n        type: 'scatter',\n        data: data.map(d => {\n          return {\n            name: d.name,\n            value: d.value,\n            symbol: `image://./images/programming-language/${d.icon}`,\n            symbolSize: d.iconSize || iconDefaultSize,\n            label: { ...languageSkillChartLabelCommon },\n          };\n        }),\n      };\n    }),\n  } as EChartOption);\n\n  return <ReactEcharts option={languageSkillChartOption} style={{ height: '720px' }} />;\n};\n\nexport default SkillLanguageMap;\n","module.exports = __webpack_public_path__ + \"static/media/avatar.1f343b33.jpeg\";","import { Badge, Card, Col, Descriptions, Divider, Row, Timeline, Typography, Avatar, List, Tag } from 'antd';\nimport React, { CSSProperties, useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport myAvatar from '../../assets/images/avatar.jpeg';\nimport SkillLanguageMap from '../../components/Skill/SkillLanguageMap';\nimport { Project, SkillLanguargeMap } from '../../models';\nimport '../ProjectListView/ProjectListView.scss';\nimport {\n  ReadOutlined,\n  DashboardOutlined,\n  CoffeeOutlined,\n  PieChartOutlined,\n  CodeOutlined,\n  BgColorsOutlined,\n  ApiOutlined,\n  ConsoleSqlOutlined,\n} from '@ant-design/icons';\nimport './index.scss';\n\nconst { Title, Text } = Typography;\n\ntype Props = {} & RouteComponentProps;\n\ninterface SkillPoint {\n  lang: string;\n  icon: string;\n  desc: string[];\n}\n\nconst ResumeEnPDFView: React.FC<Props> = _ => {\n  const skillData = require('../../assets/data/skill.json');\n  const skillPointData = require('../../assets/data/skill-point.en-US.json');\n  const [skillLanguageMapData] = useState(skillData.skills as SkillLanguargeMap);\n  const [skillPoints] = useState(skillPointData.skillPoints as SkillPoint[]);\n  const cardBodyStyle = { marginTop: '1.5rem', paddingBottom: '0.5rem' } as React.CSSProperties;\n  const [projects, setProjects] = useState([] as Project[]);\n\n  const gridStyle: CSSProperties = {\n    width: window.innerWidth < 576 ? '50%' : '25',\n    textAlign: 'center',\n    height: window.innerWidth < 576 ? 160 : 'auto',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  };\n\n  useEffect(() => {\n    const p = require('../../assets/data/project.en-US.json');\n    setProjects(p.projects);\n  }, []);\n\n  return (\n    <article className=\"resume-pdf-view\">\n      <Typography>\n        <Title>Resume</Title>\n      </Typography>\n      <Row className=\"g-mt-sm\">\n        <Col span={24}>\n          <Badge.Ribbon text=\"Base\" placement=\"start\">\n            <Card bodyStyle={cardBodyStyle}>\n              <Row>\n                <Col lg={5} xs={24} sm={5} md={5} className=\"g-text-center\">\n                  <Avatar shape=\"square\" src={myAvatar} size={130} />\n                </Col>\n                <Col lg={19} xs={24} sm={19} md={19}>\n                  <Descriptions>\n                    <Descriptions.Item label=\"Full Name\">夏 晔 (Andy xià)</Descriptions.Item>\n                    <Descriptions.Item label=\"Sex\">M</Descriptions.Item>\n                    <Descriptions.Item label=\"Birthday\">1987-06-05</Descriptions.Item>\n                    <Descriptions.Item label=\"Phone\">17521134477</Descriptions.Item>\n                    <Descriptions.Item label=\"Email\">541075770@qq.com</Descriptions.Item>\n                    <Descriptions.Item label=\"Wechat\">yin1037</Descriptions.Item>\n                    <Descriptions.Item label=\"Experience\">10+ years</Descriptions.Item>\n                    <Descriptions.Item label=\"Position\">Backend engineer</Descriptions.Item>\n                  </Descriptions>\n                </Col>\n              </Row>\n            </Card>\n          </Badge.Ribbon>\n        </Col>\n      </Row>\n      <Row className=\"g-mt-sm\">\n        <Col span={24}>\n          <Badge.Ribbon text=\"Perfessional Highlights\" placement=\"start\" color=\"#434343\">\n            <Card bodyStyle={cardBodyStyle}>\n              <ul>\n                <li>10+ years of IT experience in all phases of SDLC, like Requirement Analysis, Design, Development, Testing, and Implementation. </li>\n                <li>Over 4+ years of experience in Golang Excellent coding and problem - solving skills with ability to work as Developer.</li>\n                <li>Strong working knowledge in developing Restful webservices and Micro Services using Golang(gRPC,protobuf)</li>\n                <li>Good hands-on experience in designing, developing, implementing and deploying applications on cloud using AWS</li>\n                <li>Good knowledge on developing SQL trigger , Stored Procedures, Functions and Views for Backend process using MySQL,SqlServer,Postgresql.</li>\n                <li>Involved in performance tuning of the application by creating various database Indexes and optimizing database queries</li>\n                <li>6+ years frontend experience in Frontend Development(Vue, React, Angular)</li>\n                <li>Japanese Native Level. Fluent English speaking and writing </li>\n              </ul>\n            </Card>\n          </Badge.Ribbon>\n        </Col>\n      </Row>\n      <Row className=\"g-mt-sm\">\n        <Col span={24}>\n          <Badge.Ribbon text=\"Career and Education\" placement=\"start\" color=\"lime\">\n            <Card bodyStyle={cardBodyStyle}>\n              <Timeline>\n                <Timeline.Item dot={<DashboardOutlined />}>9 years Full Stack Engineer career in Tokyo</Timeline.Item>\n                <Timeline.Item dot={<DashboardOutlined />}>As a Japan offshore developer in Shanghai for 3 years</Timeline.Item>\n                <Timeline.Item dot={<ReadOutlined className=\"force-fc-danger\" />}> College graduate</Timeline.Item>\n              </Timeline>\n            </Card>\n          </Badge.Ribbon>\n        </Col>\n      </Row>\n      {false && (\n        <Row className=\"g-mt-sm\">\n          <Col span={24}>\n            <Badge.Ribbon text=\"语言能力\" placement=\"start\" color=\"magenta\">\n              <Card bodyStyle={cardBodyStyle}>\n                <Row gutter={[16, 16]}>\n                  <Col lg={8} xs={24} sm={8} md={8} className=\"g-text-center\">\n                    <Avatar size={24} src=\"./images/flag/china.svg\" />\n                    <ul className=\"g-text-left\">\n                      <li>母语</li>\n                      <li>2年公司内部培训讲师经验</li>\n                    </ul>\n                  </Col>\n                  <Col lg={8} xs={24} sm={8} md={8} className=\"g-text-center\">\n                    <Avatar size={24} src=\"./images/flag/japan.svg\" className=\"g-mr-xs-force\" />\n                    <ul className=\"g-text-left\">\n                      <li>日语1级，大学时参加过日语配音活动</li>\n                      <li>日本近10年生活经验，接近母语水平</li>\n                      <li>可独立处理日常生活以及商务谈判</li>\n                    </ul>\n                  </Col>\n                  <Col lg={8} xs={24} sm={8} md={8} className=\"g-text-center\">\n                    <Avatar size={24} src=\"./images/flag/united-states.svg\" className=\"g-mr-xs-force\" />\n                    <ul className=\"g-text-left\">\n                      <li>熟练读写开发类技术文档</li>\n                      <li>简单日常会话</li>\n                      <li>Github，Stack Overflow 常客</li>\n                    </ul>\n                  </Col>\n                </Row>\n              </Card>\n            </Badge.Ribbon>\n          </Col>\n        </Row>\n      )}\n      <Row className=\"g-mt-sm  page-break\">\n        <Col span={24}>\n          <Badge.Ribbon text=\"Skills\" placement=\"start\" color=\"volcano\">\n            <Card>\n              {false && (\n                <div className=\"g-py-sm\">\n                  <Card title=\"优势\" size=\"small\">\n                    <Card.Grid style={gridStyle}>\n                      <CoffeeOutlined className=\"g-fs-56\" style={{ color: '#fa8c16' }} />\n                      <div className=\"g-pt-sm\">独立开发者，自我学习，开拓能力</div>\n                    </Card.Grid>\n                    <Card.Grid style={gridStyle}>\n                      <CodeOutlined className=\"g-fs-56\" style={{ color: '#595959' }} />\n                      <div className=\"g-pt-sm\">命令行玩得溜</div>\n                    </Card.Grid>\n                    <Card.Grid style={gridStyle}>\n                      <BgColorsOutlined className=\"g-fs-56\" style={{ color: '#eb2f96' }} />\n                      <div className=\"g-pt-sm\">UI设计开发</div>\n                    </Card.Grid>\n                    <Card.Grid style={gridStyle}>\n                      <ApiOutlined className=\"g-fs-56\" style={{ color: '#1890ff' }} />\n                      <div className=\"g-pt-sm\">架构设计，开发</div>\n                    </Card.Grid>\n                    <Card.Grid style={gridStyle}>\n                      <ConsoleSqlOutlined className=\"g-fs-56\" style={{ color: '#f5222d' }} />\n                      <div className=\"g-pt-sm\">性能优化</div>\n                    </Card.Grid>\n                    <Card.Grid style={gridStyle}>\n                      <PieChartOutlined className=\"g-fs-56\" style={{ color: '#52c41a' }} />\n                      <div className=\"g-pt-sm\">数据可视化</div>\n                    </Card.Grid>\n                  </Card>\n                </div>\n              )}\n              <List\n                itemLayout=\"horizontal\"\n                dataSource={skillPoints}\n                renderItem={item => (\n                  <List.Item>\n                    <List.Item.Meta\n                      avatar={<img src={`./images/programming-language/${item.icon}`} style={{ width: '30px' }} />}\n                      title={<b className=\"g-fs-16\">{item.lang}</b>}\n                      description={item.desc.map(d => (\n                        <Tag>{d}</Tag>\n                      ))}\n                    />\n                  </List.Item>\n                )}\n              />\n            </Card>\n          </Badge.Ribbon>\n        </Col>\n      </Row>\n      <Row className=\"g-mt-sm page-break\">\n        <Col span={24}>\n          <Badge.Ribbon text=\"Project Experience\" placement=\"start\" color=\"orange\">\n            <Card bodyStyle={cardBodyStyle}>\n              <List\n                itemLayout=\"vertical\"\n                size=\"large\"\n                dataSource={projects}\n                renderItem={(item, index) => (\n                  <List.Item key={item.id} extra={<img loading=\"lazy\" src={item.image} style={{ maxWidth: '272px', height: '200px' }} alt={item.title} />}>\n                    <List.Item.Meta\n                      avatar={<Avatar shape=\"square\" src=\"./images/project-career.svg\" />}\n                      description={item.description}\n                      title={<span>{`${index + 1}. ${item.title}`}</span>}\n                    />\n                    <ul className=\"project-list-view__teck-list\">\n                      {/* <li>\n                        <label>Detail:</label>\n                        <p className=\"project-list-view__teck-project-detail\" dangerouslySetInnerHTML={{ __html: item.detail.join('<br/>') || '' }}></p>\n                      </li> */}\n                      <li>\n                        <label>Frontend:</label>\n                        <span>{item.frontend}</span>\n                      </li>\n                      <li>\n                        <label>Backend: </label>\n                        <span>{item.backend}</span>\n                      </li>\n                      <li>\n                        <label>DB: </label>\n                        <span>{item.database}</span>\n                      </li>\n                      {item.CI ? (\n                        <li>\n                          <label>CI: </label>\n                          <span>{item.CI}</span>\n                        </li>\n                      ) : null}\n                      {item.other ? (\n                        <li>\n                          <label>Other: </label>\n                          <span>{item.other}</span>\n                        </li>\n                      ) : null}\n                    </ul>\n                  </List.Item>\n                )}\n              ></List>\n            </Card>\n          </Badge.Ribbon>\n        </Col>\n      </Row>\n\n      <Row className=\"g-mt-sm\">\n        <Col span={24}>\n          <Badge.Ribbon text=\"Skill Map\" placement=\"start\" color=\"purple\">\n            <Card bodyStyle={cardBodyStyle}>\n              <SkillLanguageMap title=\"Programming Language\" dataSource={skillLanguageMapData} axis={{ xLabel: 'Experience', yLabel: 'Level' }} />\n            </Card>\n          </Badge.Ribbon>\n        </Col>\n      </Row>\n      {false && (\n        <Row className=\"g-mt-sm\">\n          <Col span={24}>\n            <Badge.Ribbon text=\"生活爱好\" placement=\"start\" color=\"#13c2c2\">\n              <Card bodyStyle={cardBodyStyle}>\n                <Row>\n                  <Col lg={8} xs={24} sm={8} md={8} className=\"g-text-center\">\n                    <Title level={3}>撸铁</Title>\n                    <Text mark>卧推: 150kg　深蹲: 140kg　硬拉: 180kg</Text>\n                    <div className=\"g-mt-sm\"></div>\n                    <Avatar shape=\"square\" src=\"./images/life/muscle.jpg\" size={240} />\n                  </Col>\n                  <Col lg={8} xs={24} sm={8} md={8} className=\"g-text-center\">\n                    <Title level={3}>写程序</Title>\n                    <Text mark>用HHKB没有菜鸟，懂得自然懂</Text>\n                    <div className=\"g-mt-sm\"></div>\n                    <Avatar shape=\"square\" src=\"./images/life/coding.jpg\" size={240} />\n                  </Col>\n                  <Col lg={8} xs={24} sm={8} md={8} className=\"g-text-center\">\n                    <Title level={3}>游戏</Title>\n                    <Text mark>抵制盗版，这是一种态度</Text>\n                    <div className=\"g-mt-sm\"></div>\n                    <Avatar shape=\"square\" src=\"./images/life/game.jpg\" size={240} />\n                  </Col>\n                </Row>\n              </Card>\n            </Badge.Ribbon>\n          </Col>\n        </Row>\n      )}\n    </article>\n  );\n};\n\nexport default ResumeEnPDFView;\n"],"sourceRoot":""}
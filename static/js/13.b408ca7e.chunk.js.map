{"version":3,"sources":["views/ProjectListView/ProjectListView.tsx"],"names":["ProjectListView","prop","useState","projects","setProjects","top","setTop","useEffect","p","require","className","type","icon","size","onClick","history","push","itemLayout","dataSource","footer","renderItem","item","index","Item","key","id","actions","color","basicDesign","detailedDesign","implementation","unitTest","integrationTest","release","extra","loading","src","image","style","maxWidth","height","alt","title","Meta","avatar","shape","description","url","href","target","rel","dangerouslySetInnerHTML","__html","detail","join","frontend","backend","database","CI","other","offsetTop","offsetBottom","bottom","right","position","window","scrollTo","left","behavior"],"mappings":"8sYA2HeA,UAhH0B,SAAAC,GACvC,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAQA,OALAC,qBAAU,WACR,IAAMC,EAAIC,EAAQ,KAClBL,EAAYI,EAAEL,YACb,IAGD,6BAASO,UAAU,qBACjB,kBAAC,IAAD,CAAQA,UAAU,gBAAgBC,KAAK,OAAOC,KAAM,kBAAC,IAAD,MAAuBC,KAAK,QAAQC,QAAS,kBAAMb,EAAKc,QAAQC,KAAK,OAAzH,gBAGA,wBAAIN,UAAU,mBAAd,4BACA,kBAAC,IAAD,CACEO,WAAW,WACXJ,KAAK,QACLK,WAAYf,EACZgB,OAAQ,4CACRC,WAAY,SAACC,EAAMC,GAAP,OACV,kBAAC,IAAKC,KAAN,CACEC,IAAKH,EAAKI,GACVC,QAAS,CACP,+BACE,kBAAC,IAAD,CAAKC,MAAON,EAAKO,YAvBd,UAuBuC,IAA1C,6BAEF,+BACE,kBAAC,IAAD,CAAKD,MAAON,EAAKQ,eA1Bd,UA0B0C,IAA7C,6BAEF,+BACE,kBAAC,IAAD,CAAKF,MAAON,EAAKS,eA7Bd,UA6B0C,IAA7C,iBAEF,+BACE,kBAAC,IAAD,CAAKH,MAAON,EAAKU,SAhCd,UAgCoC,IAAvC,mCAEF,+BACE,kBAAC,IAAD,CAAKJ,MAAON,EAAKW,gBAnCd,UAmC2C,IAA9C,mCAEF,+BACE,kBAAC,IAAD,CAAKL,MAAON,EAAKY,QAtCd,UAsCmC,IAAtC,8BAGJC,MAAO,yBAAKC,QAAQ,OAAOC,IAAKf,EAAKgB,MAAOC,MAAO,CAAEC,SAAU,QAASC,OAAQ,SAAWC,IAAKpB,EAAKqB,SAErG,kBAAC,IAAKnB,KAAKoB,KAAX,CACEC,OAAQ,kBAAC,IAAD,CAAQC,MAAM,SAAST,IAAI,gCACnCU,YAAazB,EAAKyB,YAClBJ,MACE,wCACMpB,EAAQ,EADd,aACoBD,EAAKqB,OACtBrB,EAAK0B,KACJ,kBAAC,IAAD,CAASL,MAAM,cACb,uBAAGhC,UAAU,mBAAmBsC,KAAM3B,EAAK0B,IAAKE,OAAO,SAASC,IAAI,uBAClE,kBAAC,IAAD,WAOZ,wBAAIxC,UAAU,gCACZ,4BACE,gDACA,uBAAGA,UAAU,yCAAyCyC,wBAAyB,CAAEC,OAAQ/B,EAAKgC,OAAOC,KAAK,UAAY,OAExH,4BACE,4CACA,8BAAOjC,EAAKkC,WAEd,4BACE,4CACA,8BAAOlC,EAAKmC,UAEd,4BACE,uCACA,8BAAOnC,EAAKoC,WAEbpC,EAAKqC,GACJ,4BACE,uCACA,8BAAOrC,EAAKqC,KAEZ,KACHrC,EAAKsC,MACJ,4BACE,0CACA,8BAAOtC,EAAKsC,QAEZ,UAMZ,kBAAC,IAAD,CAAOC,UAAWvD,EAAKwD,aAAc,GAAIvB,MAAO,CAAEwB,OAAQ,OAAQC,MAAO,OAAQC,SAAU,aACzF,kBAAC,IAAD,CACErD,KAAK,UACLG,QAAS,WACPR,EAAOD,EAAM,IACb4D,OAAOC,SAAS,CAAE7D,IAAK,EAAG8D,KAAM,EAAGC,SAAU,YAE/CxD,KAAM,kBAAC,IAAD,MACNC,KAAK,QACLgC,MAAM","file":"static/js/13.b408ca7e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { List, Tag, Tooltip } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\nimport './ProjectListView.scss';\nimport { Affix, Avatar, Button } from 'antd';\nimport { UpOutlined, ArrowLeftOutlined } from '@ant-design/icons';\nimport { Project } from '../../models';\n\ntype Props = {} & RouteComponentProps;\n\nconst ProjectListView: React.FC<Props> = prop => {\n  const [projects, setProjects] = useState([] as Project[]);\n  const [top, setTop] = useState(20);\n  const tagColor = '#108ee9';\n\n  useEffect(() => {\n    const p = require('../../assets/data/project.json');\n    setProjects(p.projects);\n  }, []);\n\n  return (\n    <section className=\"project-list-view\">\n      <Button className=\"app__btn-back\" type=\"link\" icon={<ArrowLeftOutlined />} size=\"large\" onClick={() => prop.history.push('/')}>\n        戻る\n      </Button>\n      <h1 className=\"app__page-title\">案件履歴</h1>\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        dataSource={projects}\n        footer={<h3>以上</h3>}\n        renderItem={(item, index) => (\n          <List.Item\n            key={item.id}\n            actions={[\n              <label>\n                <Tag color={item.basicDesign ? tagColor : ''}>基本設計</Tag>\n              </label>,\n              <label>\n                <Tag color={item.detailedDesign ? tagColor : ''}>詳細設計</Tag>\n              </label>,\n              <label>\n                <Tag color={item.implementation ? tagColor : ''}>実装</Tag>\n              </label>,\n              <label>\n                <Tag color={item.unitTest ? tagColor : ''}>単体テスト</Tag>\n              </label>,\n              <label>\n                <Tag color={item.integrationTest ? tagColor : ''}>総合テスト</Tag>\n              </label>,\n              <label>\n                <Tag color={item.release ? tagColor : ''}>リリース</Tag>\n              </label>,\n            ]}\n            extra={<img loading=\"lazy\" src={item.image} style={{ maxWidth: '272px', height: '200px' }} alt={item.title} />}\n          >\n            <List.Item.Meta\n              avatar={<Avatar shape=\"square\" src=\"./images/project-career.svg\" />}\n              description={item.description}\n              title={\n                <span>\n                  {`${index + 1}. ${item.title}`}\n                  {item.url && (\n                    <Tooltip title=\"Go to site\">\n                      <a className=\"force-fc-primary\" href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <LinkOutlined />\n                      </a>\n                    </Tooltip>\n                  )}\n                </span>\n              }\n            />\n            <ul className=\"project-list-view__teck-list\">\n              <li>\n                <label>詳細:</label>\n                <p className=\"project-list-view__teck-project-detail\" dangerouslySetInnerHTML={{ __html: item.detail.join('<br/>') || '' }}></p>\n              </li>\n              <li>\n                <label>Frontend:</label>\n                <span>{item.frontend}</span>\n              </li>\n              <li>\n                <label>Backend: </label>\n                <span>{item.backend}</span>\n              </li>\n              <li>\n                <label>DB: </label>\n                <span>{item.database}</span>\n              </li>\n              {item.CI ? (\n                <li>\n                  <label>CI: </label>\n                  <span>{item.CI}</span>\n                </li>\n              ) : null}\n              {item.other ? (\n                <li>\n                  <label>Other: </label>\n                  <span>{item.other}</span>\n                </li>\n              ) : null}\n            </ul>\n          </List.Item>\n        )}\n      ></List>\n\n      <Affix offsetTop={top} offsetBottom={10} style={{ bottom: '10px', right: '20px', position: 'absolute' }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setTop(top + 10);\n            window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n          }}\n          icon={<UpOutlined />}\n          size=\"large\"\n          shape=\"circle\"\n        />\n      </Affix>\n    </section>\n  );\n};\n\nexport default ProjectListView;\n"],"sourceRoot":""}
{"version":3,"sources":["routes/public-routes.ts","components/PublicLayout/PublicLayout.tsx","routes/RouterTemplate.tsx","App.tsx","index.tsx"],"names":["root","component","React","lazy","path","projects","skills","PublicLayout","props","Component","id","withRouter","prop","fallback","_","map","publicRoutes","route","key","exact","render","App","className","moment","locale","ReactDOM","jaJP","document","getElementById"],"mappings":"0QAOe,GACbA,KAAM,CACJC,UANaC,IAAMC,MAAK,kBAAM,4EAO9BC,KAAM,KAERC,SAAU,CACRJ,UAToBC,IAAMC,MAAK,kBAAM,8DAUrCC,KAAM,aAERE,OAAQ,CACNL,UAZcC,IAAMC,MAAK,kBAAM,8DAa/BC,KAAM,Y,eCDKG,G,OATuB,SAAAC,GACpC,IAAMC,EAAYD,EAAMP,UACxB,OACE,6BAASS,GAAG,QACV,kBAACD,EAAcD,MCaNG,eAf6B,SAAAC,GAC1C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,2CACjBC,IAAEC,IAAIC,GAAc,SAACC,EAAYC,GAAiB,IACzCjB,EAAoBgB,EAApBhB,UAAWG,EAASa,EAATb,KACnB,OAAO,kBAAC,IAAD,CAAOe,OAAK,EAACD,IAAKA,EAAKd,KAAMA,EAAMgB,OAAQ,SAAAH,GAAK,OAAI,kBAAC,EAAD,eAAchB,UAAWA,GAAegB,gBCFhGI,EARkB,SAAAb,GAC/B,OACE,yBAAKE,GAAG,MAAMY,UAAU,OACtB,kBAAC,EAAmBd,K,wCCC1Be,IAAOC,OAAO,MAEdC,IAASL,OACP,kBAAC,IAAD,CAAgBI,OAAQE,KACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzB,UAAWoB,EAAKjB,KAAK,QAGhCuB,SAASC,eAAe,U","file":"static/js/main.2ab84c8c.chunk.js","sourcesContent":["import React from 'react';\nimport { RouteProps } from 'react-router';\n\nconst HomeView = React.lazy(() => import('../views/HomeView/HomeView'));\nconst ProjectListView = React.lazy(() => import('../views/ProjectListView/ProjectListView'));\nconst SkillView = React.lazy(() => import('../views/SkillView/SkillView'));\n\nexport default {\n  root: {\n    component: HomeView,\n    path: '/',\n  } as RouteProps,\n  projects: {\n    component: ProjectListView,\n    path: '/projects',\n  } as RouteProps,\n  skills: {\n    component: SkillView,\n    path: '/skills',\n  } as RouteProps,\n};\n","import React, { ElementType } from 'react';\nimport './PublicLayout.scss';\nimport { RouteComponentProps } from 'react-router-dom';\n\ntype Props = {\n  component: ElementType;\n} & RouteComponentProps;\n\nconst PublicLayout: React.FC<Props> = props => {\n  const Component = props.component;\n  return (\n    <article id=\"main\">\n      <Component {...props}></Component>\n    </article>\n  );\n};\n\nexport default PublicLayout;\n","// import { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport React, { Suspense } from 'react';\nimport _ from 'lodash';\nimport publicRoutes from './public-routes';\nimport { Switch, Route, withRouter, HashRouter } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PublicLayout from '../components/PublicLayout/PublicLayout';\n\ntype PageProps = {} & RouteComponentProps;\n\nconst RouterTemplate: React.FC<PageProps> = prop => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Suspense fallback={<h1>Loading...</h1>}>\n          {_.map(publicRoutes, (route: any, key: string) => {\n            const { component, path } = route;\n            return <Route exact key={key} path={path} render={route => <PublicLayout component={component} {...route} />} />;\n          })}\n        </Suspense>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default withRouter(RouterTemplate);\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport './App.scss';\nimport RouterTemplate from './routes/RouterTemplate';\n\ntype PageProps = {} & RouteComponentProps;\n\nconst App: React.FC<PageProps> = props => {\n  return (\n    <div id=\"app\" className=\"app\">\n      <RouterTemplate {...props}></RouterTemplate>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'ant-design-style-sumamry/dist/ant-design-style-summary.min.css';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport jaJP from 'antd/es/locale/ja_JP';\nimport { ConfigProvider } from 'antd';\nimport moment from 'moment';\nimport 'moment/locale/ja';\n\nmoment.locale('ja');\n\nReactDOM.render(\n  <ConfigProvider locale={jaJP}>\n    <BrowserRouter>\n      <Route component={App} path=\"/\" />\n    </BrowserRouter>\n  </ConfigProvider>,\n  document.getElementById('root')\n);\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}